Question link:
https://leetcode.com/problems/linked-list-cycle-ii/

Code:

public class Solution {
    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null) {
            return null; 
        }
        ListNode slow = head;
        ListNode fast = head;
        
        while(fast != null  && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
            
            if(slow == fast){
                while (slow != head) {
                    head = head.next;
                    slow = slow.next;
                }
                return slow;            
            } 
        }
        return null;
    }
}

Video Solution Link:
https://drive.google.com/file/d/1nvAo6RPSZVFFYDtEjBD4LTxmP4ISlx7c/view?usp=sharing